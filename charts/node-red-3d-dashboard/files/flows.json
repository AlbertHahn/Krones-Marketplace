[{"id":"48982298.a5e65c","type":"tab","label":"ThreejsDashboard","disabled":false,"info":""},{"id":"fa8a106f.0e84d8","type":"ui_group","name":"3D","tab":"41f26cbf.7dcfc4","order":1,"disp":true,"width":14,"collapse":false},{"id":"41f26cbf.7dcfc4","type":"ui_tab","name":"THREEJS","icon":"dashboard","disabled":false,"hidden":false},{"id":"527e6f28.b881c","type":"ui_base","theme":{"name":"theme-dark","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#097479","value":"#097479","edited":false},"page-titlebar-backgroundColor":{"value":"#097479","edited":false},"page-backgroundColor":{"value":"#111111","edited":false},"page-sidebar-backgroundColor":{"value":"#333333","edited":false},"group-textColor":{"value":"#0eb8c0","edited":false},"group-borderColor":{"value":"#555555","edited":false},"group-backgroundColor":{"value":"#333333","edited":false},"widget-textColor":{"value":"#eeeeee","edited":false},"widget-backgroundColor":{"value":"#097479","edited":false},"widget-borderColor":{"value":"#333333","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"b47d356b.f7169","type":"ui_group","name":"3D_test","tab":"41f26cbf.7dcfc4","order":1,"disp":true,"width":"27","collapse":false},{"id":"b7cd86be.d445b","type":"http in","z":"48982298.a5e65c","name":"","url":"/access","method":"get","upload":false,"swaggerDoc":"","x":170,"y":540,"wires":[["81e44144.ad1cf"]]},{"id":"d84dde63.65adc8","type":"http response","z":"48982298.a5e65c","name":"","statusCode":"","headers":{},"x":630,"y":720,"wires":[]},{"id":"81e44144.ad1cf","type":"template","z":"48982298.a5e65c","name":"threejs","field":"payload.script","fieldType":"msg","format":"javascript","syntax":"plain","template":"//THREE = global.get('three')\n\n\t\tfunction main() {\n\t\t  //const slider = document.getElementsByClassName(\"md-thumb-container\");\n          const canvas = document.querySelector('#c');\n          const renderer = new THREE.WebGLRenderer({canvas});\n        \n          const fov = 60;\n          const aspect = 2;  // the canvas default\n          const near = 0.1;\n          const far = 200;\n          const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n          camera.position.z = 30;\n        \n          const scene = new THREE.Scene();\n          scene.background = new THREE.Color('white');\n        \n          // put the camera on a pole (parent it to an object)\n          // so we can spin the pole to move the camera around the scene\n          const cameraPole = new THREE.Object3D();\n          scene.add(cameraPole);\n          cameraPole.add(camera);\n        \n          {\n            const color = 0xFFFFFF;\n            const intensity = 1;\n            const light = new THREE.DirectionalLight(color, intensity);\n            light.position.set(-1, 2, 4);\n            camera.add(light);\n          }\n        \n          const boxWidth = 1;\n          const boxHeight = 1;\n          const boxDepth = 1;\n          const geometry = new THREE.BoxGeometry(boxWidth, boxHeight, boxDepth);\n        \n          function rand(min, max) {\n            if (max === undefined) {\n              max = min;\n              min = 0;\n            }\n            return min + (max - min) * Math.random();\n          }\n        \n          function randomColor() {\n            return `hsl(${rand(360) | 0}, ${rand(50, 100) | 0}%, 50%)`;\n          }\n        \n          const numObjects = 100;\n          for (let i = 0; i < numObjects; ++i) {\n            const material = new THREE.MeshPhongMaterial({\n              color: randomColor(),\n            });\n        \n            const cube = new THREE.Mesh(geometry, material);\n            scene.add(cube);\n        \n            cube.position.set(rand(-20, 20), rand(-20, 20), rand(-20, 20));\n            cube.rotation.set(rand(Math.PI), rand(Math.PI), 0);\n            cube.scale.set(rand(3, 6), rand(3, 6), rand(3, 6));\n          }\n        \n          function resizeRendererToDisplaySize(renderer) {\n            const canvas = renderer.domElement;\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n            const needResize = canvas.width !== width || canvas.height !== height;\n            if (needResize) {\n              renderer.setSize(width, height, false);\n            }\n            return needResize;\n          }\n        \n          class PickHelper {\n            constructor() {\n              this.raycaster = new THREE.Raycaster();\n              this.pickedObject = null;\n              this.pickedObjectSavedColor = 0;\n            }\n            pick(normalizedPosition, scene, camera, time) {\n              // restore the color if there is a picked object\n              if (this.pickedObject) {\n                this.pickedObject.material.emissive.setHex(this.pickedObjectSavedColor);\n                this.pickedObject = undefined;\n              }\n        \n              // cast a ray through the frustum\n              this.raycaster.setFromCamera(normalizedPosition, camera);\n              // get the list of objects the ray intersected\n              const intersectedObjects = this.raycaster.intersectObjects(scene.children);\n              if (intersectedObjects.length) {\n                // pick the first object. It's the closest one\n                this.pickedObject = intersectedObjects[0].object;\n                // save its color\n                this.pickedObjectSavedColor = this.pickedObject.material.emissive.getHex();\n                // set its emissive color to flashing red/yellow\n                this.pickedObject.material.emissive.setHex((time * 8) % 2 > 1 ? 0xFFFF00 : 0xFF0000);\n              }\n            }\n          }\n        \n          const pickPosition = {x: 0, y: 0};\n          const pickHelper = new PickHelper();\n          clearPickPosition();\n        \n          function render(time) {\n            time *= 0.001;  // convert to seconds;\n        \n            if (resizeRendererToDisplaySize(renderer)) {\n              const canvas = renderer.domElement;\n              camera.aspect = canvas.clientWidth / canvas.clientHeight;\n              camera.updateProjectionMatrix();\n            }\n        \n            cameraPole.rotation.y = time * .1;\n        \n            pickHelper.pick(pickPosition, scene, camera, time);\n        \n            renderer.render(scene, camera);\n        \n            requestAnimationFrame(render);\n          }\n          requestAnimationFrame(render);\n        \n          function getCanvasRelativePosition(event) {\n            const rect = canvas.getBoundingClientRect();\n            return {\n              x: (event.clientX - rect.left) * canvas.width  / rect.width,\n              y: (event.clientY - rect.top ) * canvas.height / rect.height,\n            };\n          }\n        \n          function setPickPosition(event) {\n            const pos = getCanvasRelativePosition(event);\n            pickPosition.x = (pos.x / canvas.width ) *  2 - 1;\n            pickPosition.y = (pos.y / canvas.height) * -2 + 1;  // note we flip Y\n          }\n        \n          function clearPickPosition() {\n            // unlike the mouse which always has a position\n            // if the user stops touching the screen we want\n            // to stop picking. For now we just pick a value\n            // unlikely to pick something\n            pickPosition.x = -100000;\n            pickPosition.y = -100000;\n          }\n          window.addEventListener('mousemove', setPickPosition);\n          window.addEventListener('mouseout', clearPickPosition);\n          window.addEventListener('mouseleave', clearPickPosition);\n        \n          window.addEventListener('touchstart', (event) => {\n            // prevent the window from scrolling\n            event.preventDefault();\n            setPickPosition(event.touches[0]);\n          }, {passive: false});\n        \n          window.addEventListener('touchmove', (event) => {\n            setPickPosition(event.touches[0]);\n          });\n        \n          window.addEventListener('touchend', clearPickPosition);\n        }\n        \n        main();\n","output":"str","x":290,"y":600,"wires":[["580817ae.c37c4"]]},{"id":"76eaaefb.604d78","type":"ui_slider","z":"48982298.a5e65c","name":"","label":"slider","tooltip":"","group":"fa8a106f.0e84d8","order":14,"width":0,"height":0,"passthru":true,"outs":"end","topic":"topic","topicType":"msg","min":"0","max":"100","step":1,"x":250,"y":300,"wires":[["bfe29996.460018"]]},{"id":"51e8bc07.3d9a74","type":"function","z":"48982298.a5e65c","name":"threenode","func":"return msg;   \n\n","outputs":1,"noerr":0,"initialize":"/*THREE = global.get('three')\n\nfunction main() {\n    \n    //canvasDom = document.createElement('canvas');\n    //canvasDom.setAttribute(\"id\", \"c\");\n    //body.appendChild(canvasDom);\n  const canvas = document.querySelector('#c');\n  const renderer = new THREE.WebGLRenderer({body});\n\n  const fov = 75;\n  const aspect = 2;  // the canvas default\n  const near = 0.1;\n  const far = 5;\n  const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  camera.position.z = 2;\n\n  const scene = new THREE.Scene();\n\n  {\n    const color = 0xFFFFFF;\n    const intensity = 1;\n    const light = new THREE.DirectionalLight(color, intensity);\n    light.position.set(-1, 2, 4);\n    scene.add(light);\n  }\n\n  const boxWidth = 1;\n  const boxHeight = 1;\n  const boxDepth = 1;\n  const geometry = new THREE.BoxGeometry(boxWidth, boxHeight, boxDepth);\n\n  const material = new THREE.MeshPhongMaterial({color: 0x44aa88});  // greenish blue\n\n  const cube = new THREE.Mesh(geometry, material);\n  scene.add(cube);\n\n  function render(time) {\n    time *= 0.001;  // convert time to seconds\n\n    cube.rotation.x = time;\n    cube.rotation.y = time;\n\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(render);\n  }\n  requestAnimationFrame(render);\n\n}\n\nmain()*/\n\n\n","finalize":"","libs":[],"x":260,"y":680,"wires":[[]]},{"id":"580817ae.c37c4","type":"template","z":"48982298.a5e65c","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!DOCTYPE html>\n\n<html>\n\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t    <script src=\"https://threejs.org/build/three.js\" ></script>\n\t\t<title>My first three.js app</title>\n\t\t<style>\n\t\t\tbody { margin: 0; }\n\t\t\t#c {height: 1000px ; width: 1000px;}\n\t\t</style>\n\t</head>\n\t<body>\n\t    <canvas id=\"c\"></canvas>\n\t\t<script>{{{payload.script}}}</script>\n\t</body>\n</html>\n","output":"str","x":420,"y":600,"wires":[["d84dde63.65adc8"]]},{"id":"f9c23b6.bdc1148","type":"ui_template","z":"48982298.a5e65c","group":"fa8a106f.0e84d8","name":"IncludeLib","order":17,"width":0,"height":0,"format":"<script type=\"module\" src=\"https://threejs.org/build/three.js\"></script>\n<script type=\"module\" src=\"https://threejsfundamentals.org/threejs/resources/threejs/r127/examples/jsm/controls/OrbitControls.js\"></script>\n<script type=\"module\" src=\"https://threejsfundamentals.org/threejs/resources/threejs/r127/examples/jsm/loaders/OBJLoader.js\"></script>\n<script type=\"module\" src=\"https://threejsfundamentals.org/threejs/resources/threejs/r127/examples/jsm/loaders/MTLLoader.js\"></script>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"global","x":90,"y":300,"wires":[["76eaaefb.604d78"]]},{"id":"bfe29996.460018","type":"ui_template","z":"48982298.a5e65c","group":"fa8a106f.0e84d8","name":"ThreeRndCubes","order":1,"width":10,"height":7,"format":"<!DOCTYPE html>\n<html>\n    <head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>My first three.js app</title>\n\t</head>\n\t<body>\n\t    <canvas id=\"c\"></canvas>\n        <script>\n    \t\tfunction main(number) {\n              var number = parseInt(number,10)\n              const canvas = document.querySelector('#c');\n              const renderer = new THREE.WebGLRenderer({canvas});\n            \n              const fov = 60;\n              const aspect = 2;  // the canvas default\n              const near = 0.1;\n              const far = 200;\n              const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n              camera.position.z = 30;\n            \n              const scene = new THREE.Scene();\n              scene.background = new THREE.Color('white');\n            \n              // put the camera on a pole (parent it to an object)\n              // so we can spin the pole to move the camera around the scene\n              const cameraPole = new THREE.Object3D();\n              scene.add(cameraPole);\n              cameraPole.add(camera);\n            \n              {\n                const color = 0xFFFFFF;\n                const intensity = 1;\n                const light = new THREE.DirectionalLight(color, intensity);\n                light.position.set(-1, 2, 4);\n                camera.add(light);\n              }\n            \n              const boxWidth = 1;\n              const boxHeight = 1;\n              const boxDepth = 1;\n              const geometry = new THREE.BoxGeometry(boxWidth, boxHeight, boxDepth);\n            \n              function rand(min, max) {\n                if (max === undefined) {\n                  max = min;\n                  min = 0;\n                }\n                return min + (max - min) * Math.random();\n              }\n            \n              function randomColor() {\n                return `hsl(${rand(360) | 0}, ${rand(50, 100) | 0}%, 50%)`;\n              }\n            \n              var numObjects = number;\n              for (let i = 0; i < numObjects; ++i) {\n                const material = new THREE.MeshPhongMaterial({\n                  color: randomColor(),\n                });\n            \n                const cube = new THREE.Mesh(geometry, material);\n                scene.add(cube);\n            \n                cube.position.set(rand(-20, 20), rand(-20, 20), rand(-20, 20));\n                cube.rotation.set(rand(Math.PI), rand(Math.PI), 0);\n                cube.scale.set(rand(3, 6), rand(3, 6), rand(3, 6));\n              }\n            \n              function resizeRendererToDisplaySize(renderer) {\n                const canvas = renderer.domElement;\n                const width = canvas.clientWidth;\n                const height = canvas.clientHeight;\n                const needResize = canvas.width !== width || canvas.height !== height;\n                if (needResize) {\n                  renderer.setSize(width, height, false);\n                }\n                return needResize;\n              }\n            \n              class PickHelper {\n                constructor() {\n                  this.raycaster = new THREE.Raycaster();\n                  this.pickedObject = null;\n                  this.pickedObjectSavedColor = 0;\n                }\n                pick(normalizedPosition, scene, camera, time) {\n                  // restore the color if there is a picked object\n                  if (this.pickedObject) {\n                    this.pickedObject.material.emissive.setHex(this.pickedObjectSavedColor);\n                    this.pickedObject = undefined;\n                  }\n            \n                  // cast a ray through the frustum\n                  this.raycaster.setFromCamera(normalizedPosition, camera);\n                  // get the list of objects the ray intersected\n                  const intersectedObjects = this.raycaster.intersectObjects(scene.children);\n                  if (intersectedObjects.length) {\n                    // pick the first object. It's the closest one\n                    this.pickedObject = intersectedObjects[0].object;\n                    // save its color\n                    this.pickedObjectSavedColor = this.pickedObject.material.emissive.getHex();\n                    // set its emissive color to flashing red/yellow\n                    this.pickedObject.material.emissive.setHex((time * 8) % 2 > 1 ? 0xFFFF00 : 0xFF0000);\n                  }\n                }\n              }\n            \n              const pickPosition = {x: 0, y: 0};\n              const pickHelper = new PickHelper();\n              clearPickPosition();\n            \n              function render(time) {\n                time *= 0.001;  // convert to seconds;\n            \n                if (resizeRendererToDisplaySize(renderer)) {\n                  const canvas = renderer.domElement;\n                  camera.aspect = canvas.clientWidth / canvas.clientHeight;\n                  camera.updateProjectionMatrix();\n                }\n            \n                cameraPole.rotation.y = time * .1;\n            \n                pickHelper.pick(pickPosition, scene, camera, time);\n            \n                renderer.render(scene, camera);\n            \n                requestAnimationFrame(render);\n              }\n              requestAnimationFrame(render);\n            \n              function getCanvasRelativePosition(event) {\n                const rect = canvas.getBoundingClientRect();\n                return {\n                  x: (event.clientX - rect.left) * canvas.width  / rect.width,\n                  y: (event.clientY - rect.top ) * canvas.height / rect.height,\n                };\n              }\n            \n              function setPickPosition(event) {\n                const pos = getCanvasRelativePosition(event);\n                pickPosition.x = (pos.x / canvas.width ) *  2 - 1;\n                pickPosition.y = (pos.y / canvas.height) * -2 + 1;  // note we flip Y\n              }\n            \n              function clearPickPosition() {\n                // unlike the mouse which always has a position\n                // if the user stops touching the screen we want\n                // to stop picking. For now we just pick a value\n                // unlikely to pick something\n                pickPosition.x = -100000;\n                pickPosition.y = -100000;\n              }\n              window.addEventListener('mousemove', setPickPosition);\n              window.addEventListener('mouseout', clearPickPosition);\n              window.addEventListener('mouseleave', clearPickPosition);\n            \n              window.addEventListener('touchstart', (event) => {\n                // prevent the window from scrolling\n                event.preventDefault();\n                setPickPosition(event.touches[0]);\n              }, {passive: false});\n            \n              window.addEventListener('touchmove', (event) => {\n                setPickPosition(event.touches[0]);\n              });\n            \n              window.addEventListener('touchend', clearPickPosition);\n            }\n\t\t        \n            (function(scope) {\n                console.log('Position 1');\n                console.dir(scope);\n                scope.$watch('msg.payload', function(data) {\n                    console.log('Position 2');\n                    console.dir(data);\n                    main(data)\n                });\n            })(scope);\n\t\t</script>\n\t</body>\n</html>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":420,"y":320,"wires":[[]]},{"id":"d4554d4b.6a44a8","type":"ui_button","z":"48982298.a5e65c","name":"","group":"fa8a106f.0e84d8","order":2,"width":4,"height":1,"passthru":false,"label":"motor","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":250,"y":240,"wires":[["bfe29996.460018"]]},{"id":"dcda41c0.609868","type":"ui_template","z":"48982298.a5e65c","group":"fa8a106f.0e84d8","name":"CSS","order":15,"width":0,"height":0,"format":"\t\t<style>\n\t\t\tbody { \n\t\t\t    margin: 0;\n\t\t\t}\n\t\t\t#c {\n\n\t\t\t}\n\t\t\t.nr-dashboard-button .md-button {\n\t\t\t    width:90%;\n            }\n\t\t</style>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"global","x":70,"y":340,"wires":[["76eaaefb.604d78"]]},{"id":"a40b9d75.677cb","type":"ui_button","z":"48982298.a5e65c","name":"","group":"fa8a106f.0e84d8","order":4,"width":4,"height":1,"passthru":false,"label":"button","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":250,"y":200,"wires":[["bfe29996.460018"]]},{"id":"277bfaac.9cc46e","type":"ui_button","z":"48982298.a5e65c","name":"","group":"fa8a106f.0e84d8","order":6,"width":4,"height":1,"passthru":false,"label":"button","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":250,"y":160,"wires":[["bfe29996.460018"]]},{"id":"c6d0a590.200d18","type":"ui_button","z":"48982298.a5e65c","name":"","group":"fa8a106f.0e84d8","order":8,"width":4,"height":1,"passthru":false,"label":"button","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":250,"y":120,"wires":[["bfe29996.460018"]]},{"id":"46abb6f5.fb5fa8","type":"ui_button","z":"48982298.a5e65c","name":"","group":"fa8a106f.0e84d8","order":10,"width":4,"height":1,"passthru":false,"label":"motor","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":250,"y":80,"wires":[["bfe29996.460018"]]},{"id":"39618fa4.645b8","type":"ui_template","z":"48982298.a5e65c","group":"fa8a106f.0e84d8","name":"IncludeLib","order":18,"width":0,"height":0,"format":"","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"global","x":770,"y":380,"wires":[["6c3a016d.a97728"]]},{"id":"6c3a016d.a97728","type":"ui_template","z":"48982298.a5e65c","group":"b47d356b.f7169","name":"ObjectTest","order":1,"width":27,"height":14,"format":"<!DOCTYPE html>\n<html>\n    <head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>My first three.js app</title>\n\t</head>\n\t<body>\n\t    <canvas id=\"d\"></canvas>\n\t    <script type=\"module\">\nimport * as THREE from 'https://threejsfundamentals.org/threejs/resources/threejs/r127/build/three.module.js';\nimport {GUI} from 'https://threejsfundamentals.org/threejs/resources/threejs/r127/examples/jsm/libs/dat.gui.module.js';\nimport {OrbitControls} from 'https://threejsfundamentals.org/threejs/resources/threejs/r127/examples/jsm/controls/OrbitControls.js';\nimport {OBJLoader} from 'https://threejsfundamentals.org/threejs/resources/threejs/r127/examples/jsm/loaders/OBJLoader.js';\nimport {MTLLoader} from 'https://threejsfundamentals.org/threejs/resources/threejs/r127/examples/jsm/loaders/MTLLoader.js';\nimport {GLTFLoader} from 'https://threejsfundamentals.org/threejs/resources/threejs/r127/examples/jsm/loaders/GLTFLoader.js';\n\nvar room;\nvar car;\nvar cube;\nvar clock;\nvar mixer;\nvar c1;\n\nvar API = {\n  color: 0xffffff,\n  exposure: 1.0\n};\n\n\n\nfunction main() {\n  const canvas = document.querySelector('#d');\n  const renderer = new THREE.WebGLRenderer({antialias: true, canvas});\n\n\n\n  const fov = 45;\n  const aspect = 2;  // the canvas default\n  const near = 0.1;\n  const far = 1000;\n  const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  camera.position.set(0, 60, 50);\n\n  const controls = new OrbitControls(camera, canvas);\n  controls.target.set(0, 50, 0);\n  controls.update();\n\n  const scene = new THREE.Scene();\n  clock = new THREE.Clock();\n  scene.background = new THREE.Color('black');\n\n  {\n    const hlight = new THREE.AmbientLight(0xfff8a5,100);\n    scene.add(hlight);\n\n    const directionalLight = new THREE.DirectionalLight(0xfff8a5,100);\n    directionalLight.position.set(0,1,0);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n    const light = new THREE.PointLight(0xfff8a5,10);\n    light.position.set(0,300,500);\n    scene.add(light);\n    /*const light2 = new THREE.PointLight(0xc4c4c4,10);\n    light2.position.set(500,100,0);\n    scene.add(light2);\n    const light3 = new THREE.PointLight(0xc4c4c4,10);\n    light3.position.set(0,100,-500);\n    scene.add(light3);\n    const light4 = new THREE.PointLight(0xc4c4c4,10);\n    light4.position.set(-500,300,500);\n    scene.add(light4);*/\n  }\n\n\n  var manager = new THREE.LoadingManager();\n  manager.onProgress = function ( item, loaded, total ) {};\n  var onProgress = function ( xhr ) {};\n  var onError = function ( xhr ) {};\n  var loader = new GLTFLoader();\n\n    // Load a glTF resource\n  loader.load('https://alberthahn.github.io/NodeRedThreeJs/3d/room.glb',function ( gltf ) {\n    room = gltf.scene;\n    room.scale.set( 3, 3, 3 );\n    room.position.set(1,5,1);\n    scene.add( room );},function ( xhr ) { console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );\n      },function ( error ) {console.log( 'An error happened' );});\n\n  loader.load('https://alberthahn.github.io/NodeRedThreeJs/3d/machine_base.glb',function ( gltf ) {\n    var machine = gltf.scene;\n    machine.scale.set( 10, 10, 10 );\n    machine.position.set(1,6,1);\n    scene.add( machine );},function ( xhr ) { console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );\n      },function ( error ) {console.log( 'An error happened' );});\n\n\n\n\n      loader.load('https://alberthahn.github.io/NodeRedThreeJs/3d/machine_c1.glb',function ( gltf ) {\n        c1 = gltf.scene;\n        c1.scale.set( 10, 10, 10 );\n        c1.position.set(1,6,1);\n        c1.name = \"c1\"\n\n        scene.add( c1 );},function ( xhr ) { console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );\n          },function ( error ) {console.log( 'An error happened' );});\n\n\n        \n        var gui = new GUI();\n        \n          gui.addColor( API, 'color' )\n          .listen()\n          .onChange( function () {\n            c1.traverse( function ( child ) {\n              if ( child instanceof THREE.Mesh )\n                  child.material.color.set( API.color );\n          });\n    \n          } );\n    \n        gui.add( API, 'exposure', 0, 2 )\n\n\n\n\n      loader.load('https://alberthahn.github.io/NodeRedThreeJs/3d/cube.glb',function ( gltf ) {\n        cube = gltf.scene;\n        cube.scale.set( 4, 4, 4 );\n        cube.position.set(1,20,1);\n\n        scene.add( cube);\n\n        mixer = new THREE.AnimationMixer( gltf.scene );\n        gltf.animations.forEach( ( clip ) => {\n            mixer.clipAction( clip ).play();\n        } );\n\n      } );\n\n\n\n{\n  scene.traverse( function ( child ) {\n    if ( child.name === \"asdf\")\n        child.material.color.set( \"0xc31b1b\" );\n        //child.color.setRGB(10,10,10);\n        console.log(\"found\")\n});\n}\n\n\n\n\n\n  function resizeRendererToDisplaySize(renderer) {\n    const canvas = renderer.domElement;\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n    const needResize = canvas.width !== width || canvas.height !== height;\n    if (needResize) {\n      renderer.setSize(width, height, false);\n    }\n    return needResize;\n  }\n\n  function render() {\n\n    if (resizeRendererToDisplaySize(renderer)) {\n      const canvas = renderer.domElement;\n      camera.aspect = canvas.clientWidth / canvas.clientHeight;\n      camera.updateProjectionMatrix();\n    }\n\n    var delta = clock.getDelta();\n  \n    if ( mixer ) mixer.update( delta );\n\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(render);\n  }\n\n  requestAnimationFrame(render);\n}\n\nmain();\n\n        \n\t    </script>\n\t    <script>\n            (function(scope) {\n                console.log('MainOBJ1');\n                console.dir(scope);\n                scope.$watch('msg.payload', function(data) {\n                    console.log('MainOBJ2');\n                    console.dir(data);\n                    mainObj(data)\n                });\n            })(scope);\n\t    </script>\n\t</body>\n</html>\n\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":1010,"y":440,"wires":[[]]},{"id":"456d0cf4.0ade24","type":"ui_button","z":"48982298.a5e65c","name":"All","group":"b47d356b.f7169","order":2,"width":4,"height":1,"passthru":false,"label":"All","tooltip":"","color":"","bgcolor":"","icon":"","payload":"all","payloadType":"str","topic":"all","topicType":"str","x":770,"y":100,"wires":[["c4390b5d.4985","6c3a016d.a97728"]]},{"id":"8c44bc84.5f14","type":"ui_template","z":"48982298.a5e65c","group":"fa8a106f.0e84d8","name":"CSS","order":16,"width":0,"height":0,"format":"\t\t<style>\n\t\t\tbody { \n\t\t\t    margin: 0;\n\t\t\t}\n\t\t\t#d {\n\n\t\t\t}\n\t\t\t.nr-dashboard-button .md-button {\n\t\t\t    width:90%;\n            }\n\t\t</style>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"global","x":750,"y":440,"wires":[["6c3a016d.a97728"]]},{"id":"b03f4324.104338","type":"ui_button","z":"48982298.a5e65c","name":"","group":"b47d356b.f7169","order":3,"width":4,"height":1,"passthru":false,"label":"motor","tooltip":"","color":"","bgcolor":"","icon":"","payload":"motor","payloadType":"str","topic":"motor","topicType":"str","x":790,"y":160,"wires":[["6c3a016d.a97728"]]},{"id":"60c289a8.7be928","type":"ui_button","z":"48982298.a5e65c","name":"","group":"b47d356b.f7169","order":4,"width":4,"height":1,"passthru":false,"label":"button","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":790,"y":200,"wires":[["6c3a016d.a97728"]]},{"id":"1cf7535f.6dc42d","type":"ui_button","z":"48982298.a5e65c","name":"","group":"b47d356b.f7169","order":5,"width":4,"height":1,"passthru":false,"label":"button","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":790,"y":260,"wires":[["6c3a016d.a97728"]]},{"id":"70978da1.8b64ac","type":"ui_button","z":"48982298.a5e65c","name":"","group":"b47d356b.f7169","order":6,"width":4,"height":1,"passthru":false,"label":"all","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":790,"y":320,"wires":[["6c3a016d.a97728"]]},{"id":"c4390b5d.4985","type":"debug","z":"48982298.a5e65c","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":960,"y":340,"wires":[]},{"id":"42e72c5.4a4e554","type":"debug","z":"48982298.a5e65c","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1130,"y":380,"wires":[]},{"id":"9a8de4de.5049b","type":"function","z":"48982298.a5e65c","name":"","func":"if(msg.topic ==\"motor\")\n{\n  return msg;   \n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":680,"wires":[[]]},{"id":"f69c398e.e27698","type":"ui_gauge","z":"48982298.a5e65c","name":"","group":"b47d356b.f7169","order":10,"width":9,"height":4,"gtype":"gage","title":"TEMP","label":"units","format":"{{value}}","min":0,"max":"100","colors":["#00b500","#0061ad","#ca3838"],"seg1":"25","seg2":"75","x":1210,"y":420,"wires":[]},{"id":"cf32321d.dea438","type":"ui_gauge","z":"48982298.a5e65c","name":"","group":"b47d356b.f7169","order":8,"width":9,"height":4,"gtype":"donut","title":"TEMP","label":"units","format":"{{value}}","min":0,"max":"100","colors":["#00b500","#0061ad","#ca3838"],"seg1":"25","seg2":"75","x":1210,"y":480,"wires":[]},{"id":"32b80e8f.6cab72","type":"ui_gauge","z":"48982298.a5e65c","name":"","group":"b47d356b.f7169","order":9,"width":9,"height":4,"gtype":"gage","title":"TEMP","label":"units","format":"{{value}}","min":0,"max":"100","colors":["#00b500","#0061ad","#ca3838"],"seg1":"25","seg2":"75","x":1210,"y":520,"wires":[]},{"id":"2dad4fec.89777","type":"inject","z":"48982298.a5e65c","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"8","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"30","payloadType":"num","x":970,"y":500,"wires":[["f69c398e.e27698","cf32321d.dea438","32b80e8f.6cab72"]]},{"id":"388de325.b883e4","type":"inject","z":"48982298.a5e65c","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"6","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"80","payloadType":"num","x":970,"y":540,"wires":[["f69c398e.e27698","cf32321d.dea438","32b80e8f.6cab72"]]}]