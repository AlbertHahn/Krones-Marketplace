apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "node-red-3d-dashboard.fullname" . }}
  labels:
    {{- include "node-red-3d-dashboard.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "node-red-3d-dashboard.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "node-red-3d-dashboard.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "node-red-3d-dashboard.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      #Declare volume
      volumes:
        - name: node-red-threejs-volume
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.claimName }}
      #  - name: flows-cm
       #   configMap:
        #    name: flows-conf-file
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 1880
              protocol: TCP
          # choose volume
          volumeMounts:
            - mountPath: /data
              name: node-red-threejs-volume
              #Copy flows to /data
           # - mountPath: /data/flows.json
            #  subPath: flows.json
             # name: flows-cm
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      initContainers:
      - name: init-myservice
        image: busybox:1.28
        command: ['sh','-c',' echo "I can \"write\" without double quotes" >> /data/file.txt']
        volumeMounts:
        - name: {{ .Values.persistence.claimName }}
          mountPath: /data
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
